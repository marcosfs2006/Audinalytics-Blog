[
  {
    "path": "posts/2021-01-23-sobre-bigodes-e-violinos/",
    "title": "Sobre Bigodes e Violinos",
    "description": "Algumas considerações sobre alguns gráficos apresentados no capítulo Foundations of Audit Analystics do livro [Audit Analytics](https://www.springer.com/gp/book/9783030490904) do J. C. Westland.",
    "author": [
      {
        "name": "Marcos F. Silva",
        "url": {}
      }
    ],
    "date": "2021-01-24",
    "categories": [
      "Livro Audit Analytics"
    ],
    "contents": "\r\n\r\nContents\r\nConsiderações iniciais\r\nGráficos apresentados no capítulo\r\n\r\nConsiderações iniciais\r\nEm linhas gerais o capítulo trata da exploração grafica de variáveis em um conjunto de dados, dos tipos de variáveis e comenta sobre as estruturas de dados existentes no R (vetores, matrizes, arrays, data frames, listas e fatores) e comenta rapidamente sobre a importância de outras estruturas de dados importantes em contabilidade como as séries temporais, os dados geolocalizados e os grafos.\r\nUma novidade pra mim foi o pacote plotluck que eu não conhecia. O pacote se propõe a apresentar a melhor visualização dos dados com base em suas características.\r\nO livro possui um pacote associado chamado auditanalytics e pode ser instalado a partir do repositório do livo no GitHub onde estão disponíveis os dados utilizados, bem como notebooks com resumos dos capítulos do livro.\r\nO resumo do capítulo 2 está contido no arquivo ch_2_statistics_analytics.Rmd.\r\nA instalação do pacote pode ser feita da seguinte forma:\r\n\r\n\r\n# install.packages(\"devtools\")\r\ndevtools::install_github(\"westland/auditanalytics\")\r\n\r\n\r\n\r\nOs dados utilizados estão armazenados em arquivos csv no próprio pacote e nesse aspecto acho que um ponto de melhoria seria disponibilizá-los no formato .RData com a correspondente documentação como usualmente ocorre nos pacotes do R.\r\nA falta de documentação dos dados, tanto no livro como no repositório e no pacote é uma falha importante visto que uma boa análise de dados pressupõe um bom conhecimento dos mesmos.\r\nA disponibilização dos dados em arquivos csv torna a importação um pouco mais trabalhosa.\r\nGráficos apresentados no capítulo\r\nA motivação para eu escrever este post foi a percepção de que alguns dos gráficos apresentados no capítulo não me pareceram uma boa escolha ou talvez eu não tenha compreendido corretamente a proposta do autor.\r\nO capítulo apresenta ao leitor quatro tipos de gráficos: histograma, gráfico de violino, boxplot e diagrama de dispersão como formas de explorar os dados, o que me faz chamar a atenção para o fato de que os gráficos a serem utilizados pelo auditor em grande medida dependem do tipo de dado que se queira visualizar e que infelizmente o uso de gráficos pelos auditores como uma ferramenta de exploração é ainda bastante incipiente.\r\nO primeiro gráfico que eu gostaria de comentar consta da página 29 e tem por objetivo, nas palavras do autor:\r\n\r\n“Na figura a seguir estamos interessados em saber se a fraude em cartões de crédito é influenciada pelo valor pago ao auditor. A gente analisa uma variável binária examinando a variação em uma outra variável conforme os valores da mesma estejam associados ao valor 0 ou 1 da variável binária.”\r\n\r\nO gráfico em questão, utilizado com vistas a ilustrar a exploração de variáveis binárias, é o seguinte:\r\n\r\nShow code\r\nlibrary(auditanalytics)\r\nlibrary(ggplot2)\r\nlibrary(dplyr)\r\n\r\n# Importação dos dados\r\nsox_stats <- read.csv(system.file(\"extdata\", \"ch_2_data_types.csv\", package=\"auditanalytics\", mustWork=TRUE))\r\n\r\n# Gráfico\r\nggplot(sox_stats, aes(x=non_audit_fee, y=audit_fee, col=as.factor(card)))+\r\n  geom_violin() +\r\n  labs(col=\"Fraud = 1 (green)\")\r\n\r\n\r\n\r\n\r\nA primeira coisa a comentar é o uso do gráfico de violino, que por ser um gráfico muito pouco conhecido, certamente não seria uma opção para a grande maioria dos auditores.\r\nA ajuda da função geom_violin() diz que “O gráfico de violino é uma representação compacta de uma distribuição contínua. É uma mistura do geom_boxplot() e do geom_density(): o gráfico de violino é um gráfico de densidade ‘espelhado’ representado da mesma forma que um boxplot.”\r\nO “box and whisker plot” (gráfico de caixa e bigodes) ou simplesmente boxplot, é um gráfico que tem por objetivo apresentar a distribuição de uma variável quantitativa por intermédio dos quartis da distribuição e indicação de limites superiores e inferiores denominados “cercas”.\r\nO boxplot e o gráfico de violino tem função semelhante, sendo que o gráfico de violino tem a vantagem de mostrar além da variabilidade dos dados e os quartis a forma da distribuição da variável por intermédio de sua densidade.\r\nA seguir apresento o mesmo conjunto de dados usando um boxplot, um gráfico de densidade e um gráfico de violino para tentar realçar a diferença entre os dois. Os dados são apresentados em cinza para dar uma ideia da localização dos mesmos.\r\n\r\nShow code\r\n# Boxplot\r\nsox_stats %>% \r\n  filter(card %in% c(0, 1)) %>% \r\nggplot(aes(y=audit_fee, x=as.factor(card)))+\r\n  geom_boxplot() +\r\n  geom_jitter(color=\"grey\", width = 0.2)\r\n\r\n\r\nShow code\r\n# Density\r\nsox_stats %>% \r\n  filter(card %in% c(0, 1)) %>% \r\nggplot(aes(y=audit_fee))+\r\n  geom_density(fill=\"lightblue\") +\r\n  facet_wrap(~ as.factor(card)) \r\n\r\n\r\nShow code\r\n# Violino\r\nsox_stats %>% \r\n  filter(card %in% c(0, 1)) %>% \r\nggplot(aes(y=audit_fee, x=as.factor(card)))+\r\n  geom_violin(draw_quantiles = c(0.25, 0.5, 0.75), color=\"blue\") +\r\n  geom_jitter(color=\"grey\", width = 0.2)\r\n\r\n\r\n\r\n\r\nExaminando os três gráficos é possível perceber que o gráfico de violino é um gráfico de densidade refletido, o que lhe dá a simetria observada e é também parecido com um boxplot, mostrando a variabilidade dos dados e os quartis.\r\nOnde existe maior concentração de dados, o gráfico de violino expressa isso na “largura” da curva, ou seja, onde tem maior concentração de dados a curva é mais larga.\r\nVoltando ao gráfico apresentado pelo autor, comentei que o objetivo declarado desse gráfico seria avaliar se a fraude em cartões de crédito é influencidada pelo valor pago aos auditores contratados.\r\nO gráfico faz uso de 3 variáveis: audit_fee, non_audit_fee e card e como já disse a base de dados não está comentada, não possuindo informações sobre o significado de cada variável e a estrutura geral dos dados. Assim, será necessário deduzir algumas coisas, o que não é o que se deve fazer na prática. O auditor deve buscar compreender com a maior clareza possível o significado de cada variável e suas particularidades para que possa ter condições de identificar situações que fujam da normalidade.\r\nAparentemente a variável card indica se a observação refere-se à fraude ou não. As outras variáveis indicam o valor pago aos auditores em razão de serviços contratados de auditoria e serviços não relacionados a auditoria.\r\nA primeira coisa que não fica clara no gráfico apresentado é o uso da variável non_audit_fee, uma variável quantitativa contínua, no eixo dos x. Considerando que o objetivo de um gráfico de violino é representar a distribuição da variável no eixo y, que deve ser quantitativa, a variável non_audit_fee não traz informação adicional para o gráfico.\r\nO mesmo problema ocorre com o gráfico apresentado na página 30, e que reproduzo a seguir utilizando o código apresentado no livro:\r\n\r\nShow code\r\nlibrary(tidyr)\r\n\r\nsox_stats$card <- as.integer(sox_stats$card)\r\n\r\nsox_stats1 <- gather(sox_stats,\r\n                     key=\"metric\",\r\n                     value = value,\r\n                     effective_303,\r\n                     mat_weak_303,\r\n                     sig_def_303,\r\n                     effective_404,\r\n                     auditor_agrees_303)\r\n\r\nggplot(sox_stats1, aes(x=non_audit_fee, y=audit_fee, col=metric)) +\r\n  geom_violin() +\r\n  scale_x_continuous(trans = \"log2\") +\r\n  scale_y_continuous(trans = \"log2\")\r\n\r\n\r\n\r\n\r\nO gráfico mostra os “violinos” igualmente espaçados e mostrando a mesma distribuição para a variável audit_fee para todos os valores da variável metric.\r\nNovamente aqui a variável non_audit_fee parece não ter qualquer influência no gráfico. Chama a atenção também o fato dos “violinos” serem todos iguais. O fato de não conhecermos em mais detalhes a base de dados dificulta a inspeção em busca de confirmação quanto a correção do resultado apresentado.\r\nO fato é que não é possível extrair maiores informações nem confirmar a exatidão do resultado sem um maior conhecimento dos dados.\r\nTambém os gráficos apresentados nas páginas 31 e 32 não me pareceram uma boa escolha para o propósito desejado.\r\nAqui o objetivo do autor é ilustrar a análise de variáveis ordinais, mais especificamente omissões ou duplicidades em variáveis que possuem valores sequenciais, tais como os números das notas fiscais.\r\nO gráfico a seguir, apresentado pelo autor, tem o objetivo de permitir a identificação visual de faturas duplicadas.\r\n\r\nShow code\r\nlibrary(lubridate)\r\n#library(kableExtra)\r\n\r\n## função para gerar datas aleatórias no ano corrente\r\nrdate <- function(x,\r\n                  min = paste0(format(Sys.Date(), '%Y'), '-01-01'),\r\n                  max = paste0(format(Sys.Date(), '%Y'), '-12-31'),\r\n                  sort = TRUE) {\r\n  dates <- sample(seq(as.Date(min), as.Date(max), by = \"day\"), x, replace = TRUE)\r\n  if (sort == TRUE) {\r\n    sort(dates)\r\n  } else {\r\n    dates\r\n  }\r\n}\r\n\r\n## Cria um data frame com 2 coluna e preenche com os valores 1 a 1000 \r\ninvoice_no <- date <- 1:1000  ## placeholder\r\njournal_ent_no <- cbind.data.frame(invoice_no,date)\r\n\r\n# Sorteia 1000 datas entre 01-01-2021 e 31-12-2021 e ordena\r\ndate <- rdate(1000)\r\n\r\n# Substitui os valores no campo 'data' pelas datas sorteadas\r\njournal_ent_no$date <- date[order(date)]\r\n\r\n# Adiciona duplicidades \r\njournal_ent_no$invoice_no <- seq(1,1000) + rbinom(1000,1,.1) # add some errors\r\n\r\n# Cria um novo data frame com identificação das duplicidades.\r\nduplicates <- duplicated(journal_ent_no$invoice_no)\r\nraw <- seq(1,1000)\r\njournal_dups <- cbind.data.frame(raw,duplicates)\r\n\r\n# Faz o gráfico\r\nggplot(journal_dups, aes(x=invoice_no, y=raw, col=duplicates)) + \r\n  geom_point()\r\n\r\n\r\n\r\n\r\nComo pode ser visto as duplicidades, em azul, não sobressaem muito. Como o espaço para o gráfico é pequeno os pontos se sobrepõem, dificultando a visualização.\r\nVou mostrar os registros iniciais do conjunto de dados utilizado para fazer esse gráfico:\r\n\r\nShow code\r\nhead(journal_dups, 10)\r\n\r\n\r\n   raw duplicates\r\n1    1      FALSE\r\n2    2      FALSE\r\n3    3      FALSE\r\n4    4      FALSE\r\n5    5      FALSE\r\n6    6      FALSE\r\n7    7      FALSE\r\n8    8      FALSE\r\n9    9      FALSE\r\n10  10      FALSE\r\n\r\nO conjunto de dados consiste em uma coluna indicando a numeração sequencial de 1 a 1000 e outra indicando se o número está duplicado na base ou não. Esta base de dados é derivada do que seria a base “original” que apresento a seguir:\r\n\r\nShow code\r\nhead(journal_ent_no, 10)\r\n\r\n\r\n   invoice_no       date\r\n1           1 2021-01-01\r\n2           2 2021-01-01\r\n3           3 2021-01-04\r\n4           4 2021-01-04\r\n5           5 2021-01-04\r\n6           6 2021-01-04\r\n7           7 2021-01-04\r\n8           8 2021-01-05\r\n9           9 2021-01-05\r\n10         10 2021-01-05\r\n\r\nA base de dados possui o número sequencial (invoice_no) e a data de emissão (date). Será que tem uma forma melhor de “visualizar” as duplicidades?\r\nVou apresentar aqui minha proposta:\r\n\r\nShow code\r\nggplot(journal_dups) + \r\n  geom_vline(xintercept = invoice_no,\r\n             color=ifelse(duplicates, \"blue\", \"white\"))+\r\n  labs(x=\"Numeração Sequencial\")\r\n\r\n\r\n\r\n\r\nAs linhas em azul indicam as faturas duplicadas. Podemos ver que a distribuição das duplicidades não aparenta ter um padrão definido.\r\nNa minha opinião a visualização das duplicidades ficou um pouco melhor. Naturalmente que quanto maior a quantidade de dados mais difícil ficará a visualização, principalmente se a mesma referir-se a visualizar os dados inidividualmente, como é o caso apresentado pelo autor.\r\nÉ claro que com um simples filtro é possível obter exatamente os números das faturas duplicadas, mas seria difícil perceber qualquer padrão nos dados caso eles existissem.\r\nO gráfico na página 32 é muito parecido mas busca identificar faturas omitidas. Acredito que a mesma solução pode ser usada na visualização.\r\nBem, por ora é tudo. Espero que tenham gostado.\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-01-23-sobre-bigodes-e-violinos/sobre-bigodes-e-violinos_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2021-01-24T23:57:14-03:00",
    "input_file": "sobre-bigodes-e-violinos.utf8.md",
    "preview_width": 1248,
    "preview_height": 768
  }
]
